>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry



>>> bg = BaseGeometry()

Checks .area output
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

Checks .integer_validator if value = str
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value < 0
>>> bg.integer_validator("name", -1)
Traceback (most recent call last):
ValueError: name must be greater than 0

Checks .integer_validator if value > 0
>>> bg.integer_validator("name", 1)

Checks .integer_validator if value = None
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = bool
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = tuple
>>> bg.integer_validator("name", ())
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = list
>>> bg.integer_validator("name", [])
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = set
>>> bg.integer_validator("name", {1, 2, 3})
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator empty parameters
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'



>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0



------- Examples that doesn't add checks

Checks .integer_validator if value == 0
>>> bg.integer_validator("name", -1)
Traceback (most recent call last):
ValueError: name must be greater than 0
